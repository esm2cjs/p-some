{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import AggregateError from '@esm2cjs/aggregate-error';\nimport PCancelable from '@esm2cjs/p-cancelable';\n\nexport class FilterError extends Error {}\n\n// Important: Cannot use the `async` keyword.\nexport default function pSome(iterable, options) {\n\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\tconst {\n\t\t\tcount,\n\t\t\tfilter = () => true\n\t\t} = options;\n\n\t\tif (!Number.isFinite(count)) {\n\t\t\treject(new TypeError(`Expected a finite number, got ${typeof options.count}`));\n\t\t\treturn;\n\t\t}\n\n\t\tconst values = [];\n\t\tconst errors = [];\n\t\tlet elementCount = 0;\n\t\tlet isSettled = false;\n\n\t\tconst completed = new Set();\n\t\tconst maybeSettle = () => {\n\t\t\tif (values.length === count) {\n\t\t\t\tresolve(values);\n\t\t\t\tisSettled = true;\n\t\t\t}\n\n\t\t\tif (elementCount - errors.length < count) {\n\t\t\t\treject(new AggregateError(errors));\n\t\t\t\tisSettled = true;\n\t\t\t}\n\n\t\t\treturn isSettled;\n\t\t};\n\n\t\tconst cancelPending = () => {\n\t\t\tfor (const promise of iterable) {\n\t\t\t\tif (!completed.has(promise) && typeof promise.cancel === 'function') {\n\t\t\t\t\tpromise.cancel();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tonCancel(cancelPending);\n\n\t\tfor (const element of iterable) {\n\t\t\telementCount++;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst value = await element;\n\n\t\t\t\t\tif (isSettled) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!filter(value)) {\n\t\t\t\t\t\tthrow new FilterError('Value does not satisfy filter');\n\t\t\t\t\t}\n\n\t\t\t\t\tvalues.push(value);\n\t\t\t\t} catch (error) {\n\t\t\t\t\terrors.push(error);\n\t\t\t\t} finally {\n\t\t\t\t\tcompleted.add(element);\n\n\t\t\t\t\tif (!isSettled && maybeSettle()) {\n\t\t\t\t\t\tcancelPending();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\tif (count > elementCount) {\n\t\t\treject(new RangeError(`Expected input to contain at least ${options.count} items, but contains ${elementCount} items`));\n\t\t\tcancelPending();\n\t\t}\n\t});\n}\n\nexport {AggregateError};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,+CAAAA;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,6BAA2B;AAC3B,0BAAwB;AAEjB,MAAM,oBAAoB,MAAM;AAAC;AAGzB,SAAR,MAAuB,UAAU,SAAS;AAChD,SAAO,IAAI,oBAAAC,QAAY,CAAC,SAAS,QAAQ,aAAa;AACrD,UAAM;AAAA,MACL;AAAA,MACA,SAAS,MAAM;AAAA,IAChB,IAAI;AAEJ,QAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC5B,aAAO,IAAI,UAAU,iCAAiC,OAAO,QAAQ,OAAO,CAAC;AAC7E;AAAA,IACD;AAEA,UAAM,SAAS,CAAC;AAChB,UAAM,SAAS,CAAC;AAChB,QAAI,eAAe;AACnB,QAAI,YAAY;AAEhB,UAAM,YAAY,oBAAI,IAAI;AAC1B,UAAM,cAAc,MAAM;AACzB,UAAI,OAAO,WAAW,OAAO;AAC5B,gBAAQ,MAAM;AACd,oBAAY;AAAA,MACb;AAEA,UAAI,eAAe,OAAO,SAAS,OAAO;AACzC,eAAO,IAAI,uBAAAD,QAAe,MAAM,CAAC;AACjC,oBAAY;AAAA,MACb;AAEA,aAAO;AAAA,IACR;AAEA,UAAM,gBAAgB,MAAM;AAC3B,iBAAW,WAAW,UAAU;AAC/B,YAAI,CAAC,UAAU,IAAI,OAAO,KAAK,OAAO,QAAQ,WAAW,YAAY;AACpE,kBAAQ,OAAO;AAAA,QAChB;AAAA,MACD;AAAA,IACD;AAEA,aAAS,aAAa;AAEtB,eAAW,WAAW,UAAU;AAC/B;AAEA,OAAC,YAAY;AACZ,YAAI;AACH,gBAAM,QAAQ,MAAM;AAEpB,cAAI,WAAW;AACd;AAAA,UACD;AAEA,cAAI,CAAC,OAAO,KAAK,GAAG;AACnB,kBAAM,IAAI,YAAY,+BAA+B;AAAA,UACtD;AAEA,iBAAO,KAAK,KAAK;AAAA,QAClB,SAAS,OAAP;AACD,iBAAO,KAAK,KAAK;AAAA,QAClB,UAAE;AACD,oBAAU,IAAI,OAAO;AAErB,cAAI,CAAC,aAAa,YAAY,GAAG;AAChC,0BAAc;AAAA,UACf;AAAA,QACD;AAAA,MACD,GAAG;AAAA,IACJ;AAEA,QAAI,QAAQ,cAAc;AACzB,aAAO,IAAI,WAAW,sCAAsC,QAAQ,6BAA6B,oBAAoB,CAAC;AACtH,oBAAc;AAAA,IACf;AAAA,EACD,CAAC;AACF;",
  "names": ["AggregateError", "PCancelable"]
}
